# ===============================
# = Security settings
# ===============================
endpoints.enabled=false

# ===============================
# = HttpClientService default settings
# = HttpClientService timeout. 
# = Set -1 to use RestTemplate default settings
# ===============================
#connection pool max count
test.httpclientservice.poolMaxConn=${HTTPCLIENTSERVICE_POOLMAXCONN:200}
#connection pool maxConnPerRoute
test.httpclientservice.maxConnPerRoute=${HTTPCLIENTSERVICE_MAXCONNPERROUTE:100}
#when connection pool is full, request timeout
test.httpclientservice.requestTimeout=${HTTPCLIENTSERVICE_REQUESTTIMEOUT:60000}
#server connect timeout
test.httpclientservice.connectTimeout=${HTTPCLIENTSERVICE_CONNECTTIMEOUT:10000}
#waitting response timeout
test.httpclientservice.readTimeout=${HTTPCLIENTSERVICE_READTIMEOUT:30000}

# ===============================
# = HttpSession settings
# ===============================
test.httpsession.maxInactiveIntervalInSeconds=${HTTPSESSION_TIMEOUT:1800}
test.httpsession.sessionCookieKey=${HTTPSESSION_COOKIE_KEY:JSESSIONID}
test.httpsession.cookieHttponly=${HTTPSESSION_COOKIE_HTTPONLY:false}
test.httpsession.cookieSecure=${HTTPSESSION_COOKIE_SECURE:false}

# ===============================
# = Redis Cache default timeout settings
# ===============================
spring.redis.timeout=${REDIS_TIMEOUT:5000}
#default cache timeout for all ReferenceData DTO response
test.redisCache.timeout.defaultCache=${REDIS_DEFAULT_CACHE_TIMEOUT:86400}

# ===============================
# = cors domain allowed origins settings
# ===============================
test.corsdomain.allowedorigins=${CORSDOMAIN_ALLOWED_ORIGINS:*}
test.corsdomain.allowedheaders=${CORSDOMAIN_ALLOWED_HEADERS:*}

# ===============================
# = Request Body settings
# ===============================
test.httprequest.bodyCharacterEncoding=${HTTPREQUEST_BODYCHARACTERENCODING:UTF-8}

# ===============================
# = Framework Application settings
# ===============================
# Location of the logging configuration file. For instance `classpath:log4j2.xml`
logging.config=classpath:logback-spring.xml
# Date format string or a fully-qualified date format class name.
# For instance `yyyy-MM-dd HH:mm:ss`.
spring.jackson.date-format=${JACKSON_DATE_FORMAT:yyyy-MM-dd}
spring.jackson.time-zone=${JACKSON_TIME_ZONE:Asia/Hong_Kong}

# ===============================
# = DATA SOURCE
# ===============================
# Set here configurations for the database connection
# Keep the connection alive if idle for a long time (needed in production)
spring.datasource.testWhileIdle=${DATASOURCE_TESTWHILEIDLE:true}
spring.datasource.validationQuery=${DATASOURCE_VALIDATIONQUERY:SELECT 1}

# ===============================
# = Framework Application Configuration
# ===============================
# Redis server host.
spring.redis.host=${REDIS_HOST:localhost}
spring.redis.database=${REDIS_DATABASE_INDEX:0}
spring.redis.port=${REDIS_PORT:6379}
# Connection url for the database
spring.datasource.url = jdbc:mysql://${MYSQL_DB_HOST:localhost}:${MYSQL_DB_PORT:3306}/${MYSQL_DB_SCHEMA:mmb_db}
spring.datasource.username = ${MYSQL_DB_USERNAME:mmb}
spring.datasource.password = ${MYSQL_DB_PW:password}

# ===============================
# = JPA / HIBERNATE
# ===============================
# Use spring.jpa.properties.* for Hibernate native properties (the prefix is
# stripped before adding them to the entity manager).
# Show or not log for each sql query
spring.jpa.show-sql=${JPA_SHOW_SQL:true}
# Hibernate ddl auto (create, create-drop, update): with "update" the database
# schema will be automatically updated accordingly to java entities found in
# the project
spring.jpa.hibernate.ddl-auto=${JPA_HIBERNATE_DDL_AUTO:update}
# Naming strategy
spring.jpa.hibernate.naming-strategy=org.hibernate.cfg.ImprovedNamingStrategy
# Allows Hibernate to generate SQL optimized for a particular DBMS
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL5Dialect
